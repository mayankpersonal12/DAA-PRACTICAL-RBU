import java.util.Arrays;

public class MaximumSubarrayWithConstraint {

    public int maxResourceUtilization(int[] resources, int constraint) {
        int start = 0;
        int currentSum = 0;
        int maxSum = 0;

        for (int end = 0; end < resources.length; end++) {
            currentSum += resources[end];

            while (currentSum > constraint && start <= end) {
                currentSum -= resources[start];
                start++;
            }

            if (currentSum <= constraint) {
                maxSum = Math.max(maxSum, currentSum);
            }
        }

        return maxSum;
    }

    public static void main(String[] args) {
        int[] resources = {4, 2, 1, 7, 3, 1};
        int constraint = 8;

        System.out.println("Resources: " + Arrays.toString(resources));
        System.out.println("Constraint: " + constraint);

        MaximumSubarrayWithConstraint solver = new MaximumSubarrayWithConstraint();
        int output = solver.maxResourceUtilization(resources, constraint);

        System.out.println("Maximum resource utilization within constraint: " + output);
    }
}
